{"id":62,"count":0,"description":"<p>Borrowing from CSS 1\u20133, and then adding its own, jQuery offers a powerful set of tools for matching a set of elements in a document.<\/p>\n      <p>To use any of the meta-characters ( such as <code> !\"#$%&amp;'()*+,.\/:;&lt;=&gt;?@[\\]^`{|}~<\/code> ) as a literal part of a name, it must be escaped with with two backslashes: <code>\\\\<\/code>. For example, an element with <code>id=\"foo.bar\"<\/code>, can use the selector <code>$(\"#foo\\\\.bar\")<\/code>. The W3C CSS specification contains the <a href=\"https:\/\/www.w3.org\/TR\/CSS21\/syndata.html#value-def-identifier\">complete set of rules regarding valid CSS selectors<\/a>. Also useful is the blog entry by Mathias Bynens on <a href=\"https:\/\/mathiasbynens.be\/notes\/css-escapes\">CSS character escape sequences for identifiers<\/a>.<\/p>","link":"https:\/\/api.jquery.com\/category\/selectors\/","name":"Selectors","slug":"selectors","taxonomy":"category","parent":0,"meta":[],"_links":{"self":[{"href":"https:\/\/api.jquery.com\/wp-json\/wp\/v2\/categories\/62","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/api.jquery.com\/wp-json\/wp\/v2\/categories"}],"about":[{"href":"https:\/\/api.jquery.com\/wp-json\/wp\/v2\/taxonomies\/category"}],"wp:post_type":[{"href":"https:\/\/api.jquery.com\/wp-json\/wp\/v2\/posts?categories=62"},{"href":"https:\/\/api.jquery.com\/wp-json\/wp\/v2\/pages?categories=62"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}